; Copyright (C) 1999, 2000, 2001, 2002, Massachusetts Institute of Technology.
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

; ****************************************************************

;***************************************************
; scm file for fetmodel
; by J. Motohisa
;
;***************************************************

(define (procedure-num-args p) 
  (let ((arity (procedure-property p 'arity)))
    (if arity (car arity) 1)))

; ****************************************************************

(define-class material-type no-parent
  (define-property epsilon 12 'number positive?)
  (define-property conductivity 0.0 'number)
  (define-property id 0 ' integer)
  )

(define infinity 1.0e20) ; big number for infinite dimensions of objects

;(define-class dielectric material-type)

;(define-class metal material-type)

; use the solid geometry classes, variables, etcetera in libgeom:
; (one specifications file can include another specifications file)
;(include "@LIBCTL_DIR@/utils/geom.scm")

;(define-class dielectric material-type
;  (define-property epsilon no-default 'number positive?))

; ****************************************************************
; predefinde funcion
; Capacitor: SGT

(define (Cox-radial r t eps) (* eps 8.85e-12 (/ (* r (log (+ 1 (/ t r)))))))


					
; ****************************************************************

(define-input-var radius 50e-9 'number) ; nanowire diameter, m
(define-input-var Lg 1e-6 'number) ; gate length, m
(define-input-var eps-semi 11.6 'number) ; dielectric constant
(define-input-var Rs 0 'number) ; source resistance
(define-input-var Rd 0 'number) ; drain resistance

; input variable for MOSFET

(define-input-var Cox 0.0233 'number) ; gate capacitance, F/m^2
(define-input-var temp 300 'number) ; temperature
(define-input-var ni 1.45e16 'number) ; intrinsic carrier concentration, m^-3
(define-input-var dphi 0 'number) ; work function difference, eV
(define-input-var tox 1.5e-9 'number) ; gate oxide thickness, m
(define-input-var eps-ox 3.9 'number) ; dielectric constant of gate oxide
(define-input-var mue 0.04 'number) ;mobility, m^2/Vs

; input Variable for MESFET
(define-input-var Nd 2.3e24 'number) ; doping density, m^-3
(define-input-var Vbi 0.34 'number) ; built in potential, eV
 
; ****************************************************************
; external functions
; ****************************************************************

; simulation main functions
(define-external-function Ids-cMOSFET true true
  'number 'number 'number)

(define-external-function Ids-cMESFET true true
  'number 'number 'number)
; ****************************************************************

; Load GNU Readline support, for easier command-line editing support.
; This is not loaded in by default in Guile 1.3.2+ because readline
; is licensed under the GPL, which would have caused Guile to effectively
; be under the GPL itself.  However, since the MIT Photonic Bands package
; is under the GPL too, we can load Readline by default with no problems.

@ACTIVATE_READLINE@  ; command to activate readline is determined by configure

(ctl-set-prompt! "fetmodel> ")

; ****************************************************************

