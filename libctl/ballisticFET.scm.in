; Copyright (C) 1998-2019 Massachusetts Institute of Technology and Steven G. Johnson
;
; This file may be used without restriction.  It is in the public
; domain, and is NOT restricted by the terms of any GNU license.
;
; This library is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; Lesser General Public License for more details.

(define-class material-type no-parent
  (define-property epsilon no-default 'number positive?)
  (define-property conductivity 0.0 'number))

; use the solid geometry classes, variables, etcetera in libgeom:
; (one specifications file can include another specifications file)
(include "@LIBCTL_DIR@/utils/geom.scm")

; ****************************************************************

; Add some predefined variables, for convenience:

(define vacuum (make material-type (epsilon 1.0)))
(define air vacuum)

(define infinity 1.0e20) ; big number for infinite dimensions of objects

(set! default-material air)

;; ****************************************************************
(define-class NW-sizes no-parent)

(define-class NW-rect NW-sizes
  (define-property W1 10e-8 'number)
  (define-property W2 8e-8 'number)
  )

(define-class NW-radial NW-sizes
  (define-property radius 5e-9 'number)
  )

(define NW-default (make NW-rect))

(define-class NWFET-params no-parent
  (define-propert sizes NW-default 'NW-sizes) ;; NW shape and size
  (define-property tox 10e-9 'number) ;; oxide thickness
  (define-property eps-ox 8.5 'number) ;; dielectric constant of gate oxide
  (define-property eps-s 8.6 'number) ;; dielectric constant of semiconductor
  (define-property bandgap 0.36  'number) ;; bandgap energy
  (define-property effective-mass 0.2 'number)
  (define-property nonpallabolic? 'false boolean)
  (define-property alpha-NP 0 'number)
  (define-property n-max 2 'integer) ;; number of subbands to consider
  (define-property m-max 2 'integer)
  )


(define NW-default
  (make NW-rect))

(define-class params-ToB no-parent
  (define-property Fermi-Energy 0 'number)
  (define-property alpha-D 0 'number)
  (define-property alpha-G 1 'number)
  (define-property C-eff 1 'number)
  )

(define params-ballisticFET0-default
  (make params-ballisticFET0-type))

(define-input-var params-ballisticFET0 params-ballisticFET0-default
  'params-ballisticFET0-type)
  
(define-input-var temperature 300 'number)

;; (define-input-var k-points '() (make-list-type 'vector3))

;; (define-input-output-var dummy (vector3 3.7+1.1i 2.3-0.1i 19) 'cvector3)

;; (define-output-var mean-dielectric 'number)

;; (define-output-var gaps (make-list-type 'number))

;; (export-type (make-list-type 'number))
;; (export-type (make-list-type (make-list-type 'number)))

; ****************************************************************

;; (define-external-function run-program true true
;;   no-return-value)

;; (define (run)
;;   (set! interactive? #f)  ; don't be interactive if we call (run)
;;   (run-program))

;; (define-external-function energy-in-object false false
;;   'number 'geometric-object)

;; (define-external-function list-func-test false false
;;   (make-list-type 'vector3) 'number (make-list-type 'integer) 'vector3)

;; (define-external-function function-func false false 'number
;;   'function 'number)

(define-external-function density2d-parabollic00 false false 'number
  'number 'number 'number 'number)

(define-external-function density1d-parabollic00 false false 'number
  'number 'number 'number 'number)

(define-external-function density1d-nonpara00 false false 'number
  'number 'number 'number 'number 'number)

(define-external-function E0-func true false 'number
  'params-ballisticFET0-type)

(define-external-function funcval-E00 true false 'number
  'number   'params-ballisticFET0-type)

(define-external-function alphaNP00 false false 'number
  'number 'number)
(define-external-function gamma-nm00 false false 'number
  'number 'number 'number 'number 'integer 'integer)
(define-external-function E-nm0 false false 'number
  'number 'number)
(define-external-function alpha-nm0 false false 'number
  'number 'number)
(define-external-function ems-nm0 false false 'number
  'number 'number)

(define-external-function Cox-rect false false 'number
  'number 'number 'number 'number)
(define-external-function Cc-rect false false 'number
  'number 'number 'number)
(define-external-function Cox-radial false false 'number
  'number 'number 'number)

;; ****************************************************************

@ACTIVATE_READLINE@  ; command to activate readline is determined by configure

; Use "example>" instead of the default "guile>" prompt.
(ctl-set-prompt! "ballistic> ")
